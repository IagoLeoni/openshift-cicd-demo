/**
 * Author: Leandro Beretta <lberetta@redhat.com>
 */

try {
    timeout(time: 60, unit: 'MINUTES') {

        node("maven") {
            stage("Checkout") {
                git url: env.GIT_DEMO_URL, branch: env.GIT_DEMO_BRANCH
            }

            stage("Compile") {
                sh "mvn clean package -DskipTests -Popenshift"
            }

            stage("Test") {
                sh "mvn test"
            }

            def version = getVersionFromPom("pom.xml")

            stage("Build Image") {
                def newTag = "DevSnapshot-${version}"

                sh "oc project dev"
                sh "oc start-build app --from-file=./target/ROOT.war -n dev"

                openshiftVerifyBuild bldCfg: "app",
                        namespace: "dev",
                        waitTime: '300', 
                        waitUnit: 'sec'

                openshiftTag alias: "false",
                        destStream: "app",
                        destTag: newTag,
                        destinationNamespace: "dev",
                        namespace: "dev",
                        srcStream: "app",
                        srcTag: "latest",
                        verbose: "true"

            }

            stage("Deploy to Dev") {
                sh "oc project dev"
                sh "oc patch dc app --patch '{\"spec\": { \"triggers\": [ { \"type\": \"ImageChange\", \"imageChangeParams\": { \"containerNames\": [ \"app\" ], \"from\": { \"kind\": \"ImageStreamTag\", \"namespace\": \"dev\", \"name\": \"app:DevSnapshot-$version\"}}}]}}' -n dev"

                openshiftDeploy depCfg: "app",
                        namespace: "dev"
            }
        }
    }
} catch (err) {
    echo "Caught: ${err}"
    currentBuild.result = 'FAILURE'

    throw err
}

def getVersionFromPom(pom) {
    def matcher = readFile(pom) =~ '<version>(.+)</version>'
    matcher ? matcher[0][1] : null
}
